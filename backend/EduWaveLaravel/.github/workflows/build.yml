name: Build Go Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21" # Adjust to your Go version

      # Create bin directory and build binaries for multiple platforms
      - name: Build binaries
        run: |
          mkdir -p bin
          GOOS=linux GOARCH=amd64 go build -o bin/docker-stack-linux-amd64 -ldflags="-s -w" .
          GOOS=linux GOARCH=arm64 go build -o bin/docker-stack-linux-arm64 -ldflags="-s -w" .
          GOOS=darwin GOARCH=amd64 go build -o bin/docker-stack-macos-amd64 -ldflags="-s -w" .
          GOOS=darwin GOARCH=arm64 go build -o bin/docker-stack-macos-arm64 -ldflags="-s -w" .
          GOOS=windows GOARCH=amd64 go build -o bin/docker-stack-windows-amd64.exe -ldflags="-s -w" .
          chmod +x bin/docker-stack-*  # Make binaries executable (except Windows)

      # Optional: Test the Linux binary (adjust based on your app's flags)
      - name: Test Linux binary
        run: |
          ./bin/docker-stack-linux-amd64 --version  # Replace with your app's test command

      # Upload binaries as artifacts
      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: go-binaries
          path: bin/

      # Attach binaries to GitHub Release (only on release event)
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            bin/docker-stack-linux-amd64
            bin/docker-stack-linux-arm64
            bin/docker-stack-macos-amd64
            bin/docker-stack-macos-arm64
            bin/docker-stack-windows-amd64.exe
