### Root
GET {{baseUrl}}
Content-Type: application/json
Accept: application/json

### Register
POST {{baseUrl}}/auth/register
Content-Type: application/json
Accept: application/json

{
    "first_name": "User",
    "last_name": "User",
    "email": "user@gmail.com",
    "password": "nopassword",
    "password_confirmation": "nopassword",
    "unique_id": "211171"
}

### Login
POST {{baseUrl}}/auth/login
Content-Type: application/json
Accept: application/json

{
    "email": "user@gmail.com",
    "password": "nopassword"
}

### Google Login
GET {{baseUrl}}/auth/redirect/google

### Logout
POST {{baseUrl}}/auth/logout
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

### Forgot Password (Not Working)
POST {{baseUrl}}/auth/forgot-password
Content-Type: application/json
Accept: application/json

{
    "email": "user@gmail.com"
}

### Reset Password (Not Working)
POST {{baseUrl}}/auth/reset-password
Content-Type: application/json
Accept: application/json

{
    "token": "reset-token",
    "email": "user@gmail.com",
    "password": "newpassword",
    "password_confirmation": "newpassword"
}

### Email Verification Notification (Not Working)
POST {{baseUrl}}/auth/email/verification-notification
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

### Verify Email (Not Working)
GET {{baseUrl}}/auth/email/verify/{{id}}/{{hash}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

### Get All Users
GET {{baseUrl}}/users
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

### Get Single User
GET {{baseUrl}}/users/{{userId}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

### Create User
POST {{baseUrl}}/users
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
    "first_name": "John",
    "last_name": "Doe",
    "email": "john.doe@example.com",
    "password": "password123",
    "password_confirmation": "password123",
    "role": "teacher",
    "unique_id": "123456"
}

### Update User
PUT {{baseUrl}}/users/{{userId}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
    "first_name": "John",
    "last_name": "Doe",
    "email": "john.doe@example.com",
    "password": "newpassword123",
    "password_confirmation": "newpassword123",
    "role": "student",
    "unique_id": "123456"
}

### Delete User
DELETE {{baseUrl}}/users/{{userId}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

### Get All Rooms
GET {{baseUrl}}/rooms
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

### Get Single Room
GET {{baseUrl}}/rooms/{{roomId}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

### Create Room
POST {{baseUrl}}/rooms
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
    "name": "Room 101"
}

### Update Room
PUT {{baseUrl}}/rooms/{{roomId}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
    "name": "Room 102"
}

### Delete Room
DELETE {{baseUrl}}/rooms/{{roomId}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

### Get All Groups
GET {{baseUrl}}/groups
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

### Get Single Group
GET {{baseUrl}}/groups/{{groupId}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

### Create Group
POST {{baseUrl}}/groups
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
  "name": "New Group"
}

### Update Group
PUT {{baseUrl}}/groups/{{groupId}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
  "name": "Updated Group"
}

### Delete Group
DELETE {{baseUrl}}/groups/{{groupId}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

### Get All Subjects
GET {{baseUrl}}/subjects
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

### Get Single Subject
GET {{baseUrl}}/subjects/{{subjectId}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

### Create Subject
POST {{baseUrl}}/subjects
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
    "name": "My New Subject"
}

### Update Subject
PUT {{baseUrl}}/subjects/{{subjectId}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
    "name": "My Updated Subject"
}

### Delete Subject
DELETE {{baseUrl}}/subjects/{{subjectId}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

### Get All Schedules
GET {{baseUrl}}/schedules
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

### Get Single Schedule
GET {{baseUrl}}/schedules/{{scheduleId}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

### Create Schedule
POST {{baseUrl}}/schedules
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
    "subject_id": 2,
    "user_id": 2,
    "group_id": 1,
    "room_id": 1,
    "pair": 1,
    "week_day": "Mon",
    "date": "2025-02-22"
}

### Update Schedule
PUT {{baseUrl}}/schedules/{{scheduleId}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
    "subject_id": 2,
    "user_id": 2,
    "group_id": 1,
    "room_id": 1,
    "pair": 1,
    "week_day": "Mon",
    "date": "2025-02-22"
}

### Delete Schedule
DELETE {{baseUrl}}/schedules/{{scheduleId}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}
